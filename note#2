# 4주차

202184032 안신영

가변적인 변수를 테스트 

exp을 5로 설정하였더니 Fail이 나왔고, 6을 입력을 해야한다.

y = 순전파, 역전파를 집어넣는다.

num.grad → assertTrue로 비교한다. 

discover라는 하위 명령 사용해서 디렉토리에서 발견한 모든 테스트 파일을 실행할 수 있다. 

테스트파일에 넣을 수 있는 것이 한정적

미분을 통해서 자동저장을 하고 자동미분을 한다.

Variable → 함수 입장에서는 input, output

정확히 set_creator의 개념을 제대로 모르겠다.

부모를 알려주는 것인가?

forward 메서드에서 구체적인 계산 수행을 한다. → Variable에 계산 결과를 넣고 아버지? set_creator?

순전파에서 가변 길이 입출력 처리는 사용시 복잡하다.

```
xs = [Variable(np.array(2)), Variable(np.array(3))]
f = Add()
ys = f(xs)
y = ys[0]
print(y.data)
```

```
NameError Traceback (most recent call last)

```

```
<ipython-input-15-372481d8c0bc> in <cell line: 1>()
----> 1 xs = [Variable(np.array(2)), Variable(np.array(3))]
      2 f = Add()
      3 ys = f(xs)
      4 y = ys[0]
      5 print(y.data)

```

```
NameError: name 'Variable' is not defined
```

여기에서 에러가 발생한다. 

z = x^2 + y^2 → Add 함수와 square 함수를 사용해야한다. 

같은 변수 반복하여(x,x) 사용시 전파되는 미분값이 덮어 써진다. → 이랬을 경우 처음 이후부터는 전달된 미분 값을 더해주도록 수정해준다.

미분값을 초기화 해주는 cleargrad 메서드

